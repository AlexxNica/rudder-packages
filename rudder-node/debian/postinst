#!/bin/sh
# postinst script for rudder-cfengine-community
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package


case "$1" in
    configure)

        # Is this the first installation?
        CFRUDDER_FIRST_INSTALL=0
        if [ ! -x /var/rudder/cfengine-community/bin/cf-execd ]; then CFRUDDER_FIRST_INSTALL=1; fi

        echo "Making sure that the permissions on the CFEngine key directory are correct..."
        if [ -d /var/rudder/cfengine-community/ppkeys ]; then
            chmod 700 /var/rudder/cfengine-community/ppkeys
            if [ `ls /var/rudder/cfengine-community/ppkeys | wc -l` -gt 0 ]; then
                chmod 600 /var/rudder/cfengine-community/ppkeys/*
            fi
        fi

        # Reload the linker cache (to acknowledge LMDB's presence if needed)
        if [ -e /etc/ld.so.conf.d/rudder.conf ]; then ldconfig; fi

        # Copy new binaries to workdir, make sure daemons are stopped first

        # Set a "lock" to avoid CFEngine being restarted during the upgrade process
        I_SET_THE_LOCK=0
        if [ ! -e /opt/rudder/etc/disable-agent ]; then
            I_SET_THE_LOCK=1
            touch /opt/rudder/etc/disable-agent
        fi

        if [ ${CFRUDDER_FIRST_INSTALL} -ne 1 ]; then /usr/sbin/service rudder-agent stop; fi

        # Copy CFEngine binaries (Changed location from sbin/ to bin/ in version 3.4)
        cp -a -f /opt/rudder/bin/cf-* /var/rudder/cfengine-community/bin/
        NB_COPIED_BINARIES=`ls -1 /var/rudder/cfengine-community/bin/ | wc -l`
        if [ ${NB_COPIED_BINARIES} -gt 0 ];then echo "CFEngine binaries copied to workdir"; fi

        # Copy initial promises if there aren't any already
        if [ ! -e /var/rudder/cfengine-community/inputs/promises.cf ]
        then
            cp -r /opt/rudder/share/initial-promises/* /var/rudder/cfengine-community/inputs
        fi

        # If the cf-promises validation fails, it means we have a broken set of promises (possibly a pre-2.8 set).
        # Reset the initial promises so the server is able to send the agent a new set of correct ones.
        RUDDER_UUID=`cat /opt/rudder/etc/uuid.hive 2>/dev/null || true`
        if ! /var/rudder/cfengine-community/bin/cf-promises >/dev/null 2>&1 && [ "z${RUDDER_UUID}" != "zroot" ]
        then
            rsync --delete -aq /opt/rudder/share/initial-promises/ /var/rudder/cfengine-community/inputs/
        fi

        # Remove the lock on CFEngine
        if [ ${I_SET_THE_LOCK} -eq 1 ]; then
            rm -f /opt/rudder/etc/disable-agent
        fi

        # Restart daemons if we stopped them, otherwise not
        if [ ${CFRUDDER_FIRST_INSTALL} -ne 1 ]
        then
            # Check if agent is disabled
            if [ ! -f /opt/rudder/etc/disable-agent ]
            then
                if [ -r /var/rudder/cfengine-community/inputs/failsafe.cf -o -r /var/rudder/cfengine-community/inputs/promises.cf ]
                then
                    /usr/sbin/service rudder-agent start
                fi
            else
                echo "********************************************************************************"
                echo "rudder-agent has been updated, but was not started as it is disabled."
                echo "To enable rudder agent, you have to remove disable file, and start rudder-agent:"
                echo "# rm -f /opt/rudder/etc/disable-agent"
                echo "# service rudder-agent start"
                echo "********************************************************************************"
            fi
        else
            echo "********************************************************************************"
            echo "rudder-agent has been installed (not started). This host can be a Rudder node."
            echo "To get started, configure your Rudder server's hostname and launch the agent:"
            echo "# echo 'rudder.server' > /var/rudder/cfengine-community/policy_server.dat"
            echo "# service rudder-agent start"
            echo "This node will then appear in the Rudder web interface under 'Accept new nodes'."
            echo "If this machine is a Rudder server, the other packages will take care of setting"
            echo "up rudder-node, you do not need to do anything in this case."
            echo "********************************************************************************"
        fi

        # Create a key if we don't have one yet
        if [ ! -f /var/rudder/cfengine-community/ppkeys/localhost.priv ]
        then
            echo -n "INFO: Creating keys for CFEngine agent..."
            /var/rudder/cfengine-community/bin/cf-key > /dev/null 2>&1
            echo " Done."
        fi

        # launch rudder agent check script, it will generate an UUID on first install or repair it if needed
        /opt/rudder/bin/check-rudder-agent

    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
