commit 6373e9f0ba522e209b53e468476ca936c12094f8
Author: Jonathan Clarke <jonathan.clarke@normation.com>
Date:   Tue Feb 23 02:08:50 2016 +0100

    Quick fix to avoid incomplete search results after a MODRDN subtree rename with back-hdb and idlcachesize

diff --git a/servers/slapd/back-bdb/dn2id.c b/servers/slapd/back-bdb/dn2id.c
index a029602..3e4d5df 100644
--- a/servers/slapd/back-bdb/dn2id.c
+++ b/servers/slapd/back-bdb/dn2id.c
@@ -571,6 +571,7 @@ hdb_dn2id_add(
 
 	/* Update all parents' IDL cache entries */
 	if ( rc == 0 && bdb->bi_idl_cache_size ) {
+		int tmprc;
 		ID tmp[2];
 		char *ptr = ((char *)&tmp[1])-1;
 		key.data = ptr;
@@ -580,9 +581,16 @@ hdb_dn2id_add(
 		bdb_idl_cache_add_id( bdb, db, &key, e->e_id );
 		if ( eip->bei_parent ) {
 			*ptr = DN_SUBTREE_PREFIX;
+			tmprc = hdb_dn2id_children( op, txn, e );
 			for (; eip && eip->bei_parent->bei_id; eip = eip->bei_parent) {
 				tmp[1] = eip->bei_id;
-				bdb_idl_cache_add_id( bdb, db, &key, e->e_id );
+				/* If the entry we're adding has kids (modrdn), just delete any subtree
+				 * caches that would include this result so they are rebuilt */
+				if (tmprc == DB_NOTFOUND) {
+					bdb_idl_cache_add_id( bdb, db, &key, e->e_id );
+				} else {
+					bdb_idl_cache_del( bdb, db, &key );
+				}
 			}
 			/* Handle DB with empty suffix */
 			if ( !op->o_bd->be_suffix[0].bv_len && eip ) {
@@ -876,7 +884,9 @@ hdb_dn2id_children(
 		db_recno_t dkids;
 		rc = cursor->c_count( cursor, &dkids, 0 );
 		if ( rc == 0 ) {
-			BEI(e)->bei_dkids = dkids;
+			if ( BEI(e) ) {
+				BEI(e)->bei_dkids = dkids;
+			}
 			if ( dkids < 2 ) rc = DB_NOTFOUND;
 		}
 	}
