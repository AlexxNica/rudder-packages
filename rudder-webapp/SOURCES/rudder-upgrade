#!/bin/bash

#####################################################################################
# Copyright 2012 Normation SAS
#####################################################################################
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, Version 3.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
################################################################################

#####################################################################################
# Upgrade script for Rudder
#####################################################################################
# Currently this script doesn't discriminate on versions, it just always runs
# all the tests and tries to upgrade what it can. It may in the future.
#
# This is mostly OK, because adding unused properties to the
# /opt/rudder/etc/rudder-web.properties configuration file is harmless. However,
# moving the policy-templates library would break Rudder, if this upgrade script
# were run on a version before 2.3.2.
#
# Upgrade checks currently implemented:
# - 2.3.2: Move /var/rudder/policy-templates to /var/rudder/configuration-repository/policy-templates
# - 2.3.2: Create and git init the shared-files directory under the configuration-repository
# - 2.3.2: Add "rudder.dir.shared.files.folder" configuration parameter to rudder-web.properties
# - 2.4.0: Add "rudder.autoArchiveItems" configuration parameter to rudder-web.properties 
# - 2.4.0: Add "rudder.autoDeployOnModification" configuration parameter to rudder-web.properties
#####################################################################################

# Helper function
# Function to check if a property exists in a configuration file and add it if not
# Parameters:
# - $1 = property name
# - $2 = value to add
function check_and_add_config_property {
    PROPERTY_NAME=$1
    PROPERTY_VALUE=$2
    ATTRIBUTESET=`grep "^${PROPERTY_NAME}[ \t]*=" /opt/rudder/etc/rudder-web.properties | wc -l`
    if [ ${ATTRIBUTESET} -eq 0 ]; then
        echo "${PROPERTY_VALUE}" >> /opt/rudder/etc/rudder-web.properties
        echo "New configuration property ${PROPERTY_NAME} added to /opt/rudder/etc/rudder-web.properties"
    fi
}

# Migrate from 2.3.0 format policy-template store (/var/rudder/policy-templates)
# to /var/rudder/configuration-repository/policy-templates
if [ -d /var/rudder/policy-templates -a ! -d /var/rudder/configuration-repository ]; then
	echo "***** WARNING *****"
	echo "The policy template store for Rudder has changed. It will be"
	echo "automatically moved from /var/rudder/policy-templates to"
	echo "/var/rudder/configuration-repository/policy-templates."

	cd /var/rudder/policy-templates && git add . && git add -u && git commit -am "Committing all pending policy template changes for automatic migration of the policy template store to /var/rudder/configuration-repository/policy-templates" || true

	mkdir -p /var/rudder/configuration-repository
	mv /var/rudder/policy-templates/.git /var/rudder/configuration-repository/
	mv /var/rudder/policy-templates /var/rudder/configuration-repository/
	cd /var/rudder/configuration-repository/ && git add -u
	cd /var/rudder/configuration-repository/ && git add policy-templates/
	cd /var/rudder/configuration-repository/ && git commit -m "Move policy-templates into configuration-repository directory"

	sed -i 's%^rudder.dir.policyPackages *= */var/rudder/policy-templates/\?$%rudder.dir.policyPackages=/var/rudder/configuration-repository/policy-templates%' /opt/rudder/etc/rudder-web.properties
	echo "rudder.dir.gitRoot=/var/rudder/configuration-repository" >> /opt/rudder/etc/rudder-web.properties

	echo "Automatic migration to /var/rudder/configuration-repository/policy-templates done."
fi

# Check default folder for shared-files exists
if [ ! -d /var/rudder/configuration-repository/shared-files ]; then
	echo "/var/rudder/configuration-repository/shared-files doesn't exist!"
	mkdir -p /var/rudder/configuration-repository/shared-files
	# If this folder doesn't contain files, git won't commit it
	# To simplify usage, we want that the user can add files simply
	# So when he will add files into shared-files they will appears in git status
	# So we force git to add the folder
	CONTENT=`ls /var/rudder/configuration-repository/shared-files/ | wc -l`
	if [ ${CONTENT} -eq 0 ]; then
		touch /var/rudder/configuration-repository/shared-files/.placeholder
		# Check if git init has been made, if not rudder will do it so we don't have to
		if [ -d /var/rudder/configuration-repository/.git ]; then
			cd /var/rudder/configuration-repository/ && git add shared-files/
			cd /var/rudder/configuration-repository/ && git commit -m "Add default shared-files directory" shared-files/
		fi
	fi
	echo "/var/rudder/configuration-repository/shared-files created"
fi

# Check shared-files folder is set in rudder-web.properties (added in 2.3.2)
check_and_add_config_property rudder.dir.shared.files.folder "##
# Shared folder
#
# Directory of the extra files the rudder root server will serve to the managed nodes
# If left empty, no extra files will be served
rudder.dir.shared.files.folder=/var/rudder/configuration-repository/shared-files"

# Check for configuration property added in 2.4
check_and_add_config_property rudder.autoArchiveItems "#
# Boolean, defaults to true.
# If true, an archive of configuration rules, groups, 
# policy instances and user policy templates is recorded
# to the rudder.dir.gitRoot directory specified above
# and a git commit is performed when any of these items is modified.
# 
rudder.autoArchiveItems=true"

# Check for configuration property added in 2.4
check_and_add_config_property rudder.autoDeployOnModification "#
# If true, when a policy instance, configuration rule,
# group, node ... is modified, promises will be automatically
# regenerated. If false, only a manual request for deployment
# will trigger a deployment.
rudder.autoDeployOnModification=true"

# Check for configuration property added in 2.4
check_and_add_config_property rudder.rest.allowNonAuthenticatedUser "#
# Boolean, defaults to true
# If true, REST API urls under /api/... won't require
# to be authenticated to be use. 
# The rational to have default=true for that is that the
# authorization/authentication part for the REST API
# will be done by a third party software, like Apache
#
rudder.rest.allowNonAuthenticatedUser=true"
