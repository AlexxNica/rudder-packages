From 845cc4f11d1f3031aafdd3790c568cbcda93ff31 Mon Sep 17 00:00:00 2001
Date: Thu, 15 Oct 2015 15:26:59 +0200
Subject: [PATCH] Automatically create hard classes based on features

---
 libenv/sysinfo.c      |  9 ++-------
 libpromises/cf3lex.l  |  4 +++-
 libpromises/feature.c | 24 +++++++++++++++---------
 libpromises/feature.h |  2 ++
 4 files changed, 22 insertions(+), 17 deletions(-)

diff --git a/libenv/sysinfo.c b/libenv/sysinfo.c
index 81de29c..b3e7280 100644
--- a/libenv/sysinfo.c
+++ b/libenv/sysinfo.c
@@ -49,6 +49,7 @@
 #include <files_lib.h>
 #include <printsize.h>
 #include <cf-windows-functions.h>
+#include <feature.h>
 
 #ifdef HAVE_ZONE_H
 # include <zone.h>
@@ -945,13 +946,7 @@ static void BuiltinClasses(EvalContext *ctx)
     snprintf(vbuff, CF_BUFSIZE, "cfengine_%s", CanonifyName(Version()));
     CreateHardClassesFromCanonification(ctx, vbuff, "inventory,attribute_name=none,source=agent");
 
-#ifdef HAVE_LIBXML2
-    CreateHardClassesFromCanonification(ctx, "feature_xml", "source=agent");
-#endif
-
-#ifdef HAVE_LIBYAML
-    CreateHardClassesFromCanonification(ctx, "feature_yaml", "source=agent");
-#endif
+    CreateHardClassesFromfeatures(ctx, "source=agent");
 }
 
 /*******************************************************************/
diff --git a/libpromises/cf3lex.l b/libpromises/cf3lex.l
index a94eeda..6ee3603 100644
--- a/libpromises/cf3lex.l
+++ b/libpromises/cf3lex.l
@@ -194,7 +194,9 @@ promise_type   [a-zA-Z_]+:
                       }
 
 {macro_if_feature}    {
-                        const char* feature_text = yytext+12;
+                        char* feature_text = yytext+12;
+                        // remove trailing ')'
+                        feature_text[strlen(feature_text)-1] = 0;
                         ParserDebug("\tL:macro @if %d:feature=%s\n", P.line_pos, feature_text);
                         {
                           if (P.if_depth > 0)
diff --git a/libpromises/feature.c b/libpromises/feature.c
index 24eeb8c..bbed9e2 100644
--- a/libpromises/feature.c
+++ b/libpromises/feature.c
@@ -1,26 +1,23 @@
 #include <syntax.h>
-
 #include <string.h>
+#include <cfnet.h>
+#include <sysinfo.h>
 
 static const char* features[] = {
-// the parser leaves a trailing ')' 
 #ifdef HAVE_LIBYAML
-  "yaml)",
+  "yaml",
 #endif
 #ifdef HAVE_LIBXML2
-  "xml2)",
+  "xml2",
 #endif
 
-  ")" // This terminates the array and declares empty as an always existing feature
+  NULL
 };
 
 int KnownFeature(const char *feature)
 {
-  int feature_count = sizeof(features)/sizeof(const char*);
-  char copy[200];
-
   // dumb algorithm, but still effective for a small number of features
-  for(int i=0 ; i<feature_count ; i++) {
+  for(int i=0 ; features[i]!=NULL ; i++) {
     int r = strcmp(feature, features[i]);
     printf("%d: %s <-> %s\n", r, feature, features[i]);
     if(r==0) {
@@ -30,3 +27,12 @@ int KnownFeature(const char *feature)
   return 0;
 }
 
+void CreateHardClassesFromfeatures(EvalContext *ctx, char *tags)
+{
+  char vbuff[CF_BUFSIZE];
+
+  for(int i=0 ; features[i]!=NULL ; i++) {
+    snprintf(vbuff, CF_BUFSIZE, "feature_%s", features[i]);
+    CreateHardClassesFromCanonification(ctx, vbuff, tags);
+  }
+}
diff --git a/libpromises/feature.h b/libpromises/feature.h
index 0c4a2f0..477ab20 100644
--- a/libpromises/feature.h
+++ b/libpromises/feature.h
@@ -4,5 +4,7 @@
 
 int KnownFeature(const char *feature);
 
+void CreateHardClassesFromfeatures(EvalContext *ctx, char *tags);
+
 #endif
 
