From 53e85a6219732b83ad42523abd30032f205b9c36 Mon Sep 17 00:00:00 2001
From: William Orr <will@worrbase.com>
Date: Thu, 9 Apr 2015 14:58:53 -0700
Subject: [PATCH 1/3] Add acceptance test for Redmine #7094

---
 .../09_insert_lines/preserve_block_blank_lines.cf  | 83 ++++++++++++++++++++++
 1 file changed, 83 insertions(+)
 create mode 100644 tests/acceptance/10_files/09_insert_lines/preserve_block_blank_lines.cf

diff --git a/tests/acceptance/10_files/09_insert_lines/preserve_block_blank_lines.cf b/tests/acceptance/10_files/09_insert_lines/preserve_block_blank_lines.cf
new file mode 100644
index 0000000..64a6249
--- /dev/null
+++ b/tests/acceptance/10_files/09_insert_lines/preserve_block_blank_lines.cf
@@ -0,0 +1,83 @@
+# https://dev.cfengine.com/issues/7094
+#
+
+body common control
+{
+  inputs => { "../../default.cf.sub" };
+  bundlesequence  => { default("$(this.promise_filename)") };
+  version => "1.0";
+}
+
+body edit_defaults test_empty
+{
+  empty_file_before_editing => "true";
+  edit_backup => "false";
+}
+
+bundle agent init
+{
+  vars:
+    "test_file" string => "$(G.testfile).test";
+
+  files:
+    "$(test_file)"
+      create => "true",
+      edit_defaults => test_empty;
+}
+
+bundle agent test
+{
+  files:
+    "$(init.test_file)"
+      edit_line  => add_bad();
+
+    "$(init.test_file)"
+      edit_line  => add_bad2();
+}
+
+bundle agent check
+{
+  vars:
+    "expected" string => "Bad 1
+    Bad 2
+
+    Bad 3
+";
+
+    "actual" string => readfile("$(init.test_file)", "inf");
+
+  classes:
+    "ok" expression => strcmp("$(expected)", "$(actual)");
+
+  reports:
+    DEBUG::
+      "OK: Expected  '$(expected)' == '$(actual)'"
+      ifvarclass => "ok";
+
+      "FAIL: Expected '$(expected)' <> '$(actual)'"
+      ifvarclass => "!ok";
+
+    ok::
+      "$(this.promise_filename) Pass";
+    !ok::
+      "$(this.promise_filename) FAIL";
+
+}
+
+bundle edit_line add_bad() {
+  insert_lines:
+    "Bad 1
+    Bad 2
+
+    Bad 3"
+      insert_type => "preserve_block";
+}
+
+bundle edit_line add_bad2() {
+  insert_lines:
+    "    Bad 2
+
+    Bad 3"
+      insert_type => "preserve_block";
+
+}

From 3c26e76cdbed3bc8cba48814346bdb0fb657fa42 Mon Sep 17 00:00:00 2001
From: William Orr <will@worrbase.com>
Date: Tue, 21 Apr 2015 14:50:06 -0700
Subject: [PATCH 2/3] Fix for Redmine #7094. Zero out buf every iteration

---
 cf-agent/files_editline.c | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/cf-agent/files_editline.c b/cf-agent/files_editline.c
index 8cc008f..93b4a3e 100644
--- a/cf-agent/files_editline.c
+++ b/cf-agent/files_editline.c
@@ -809,11 +809,12 @@ static int MatchRegion(EvalContext *ctx, const char *chunk, const Item *begin, c
 {
     const Item *ip = begin;
     size_t buf_size = strlen(chunk) + 1;
-    char *buf = xcalloc(1, buf_size);
+    char *buf = xmalloc(buf_size);
     int lines = 0;
 
     for (const char *sp = chunk; sp <= chunk + strlen(chunk); sp++)
     {
+        memset(buf, 0, buf_size);
         sscanf(sp, "%[^\n]", buf);
         sp += strlen(buf);
 

From c9574376c077843be5ac82064bf56a9d34e0e1a6 Mon Sep 17 00:00:00 2001
From: Kristian Amlie <kristian.amlie@cfengine.com>
Date: Wed, 22 Apr 2015 14:52:11 +0200
Subject: [PATCH 3/3] Small optimization: Don't zero entire buffer when first
 char will do.

---
 cf-agent/files_editline.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/cf-agent/files_editline.c b/cf-agent/files_editline.c
index 93b4a3e..e90ba41 100644
--- a/cf-agent/files_editline.c
+++ b/cf-agent/files_editline.c
@@ -814,7 +814,7 @@ static int MatchRegion(EvalContext *ctx, const char *chunk, const Item *begin, c
 
     for (const char *sp = chunk; sp <= chunk + strlen(chunk); sp++)
     {
-        memset(buf, 0, buf_size);
+        buf[0] = '\0';
         sscanf(sp, "%[^\n]", buf);
         sp += strlen(buf);
 
