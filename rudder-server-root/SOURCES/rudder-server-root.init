#!/bin/sh

#==============================================
# Start/stop script for all Rudder components #
#==============================================
#
### BEGIN INIT INFO
# Provides:		rudder
# Required-Start:	$local_fs $remote_fs $network $syslog
# Required-Stop:	$local_fs $remote_fs $network $syslog
# Default-Start:	2 3 4 5
# Default-Stop:		0 1 6
# Short-Description:	Rudder root server
# Description:		Rudder root server including all components required to run
### END INIT INFO
#
# Copyright (C) 2011 Normation
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# GPL License: http://www.gnu.org/licenses/gpl.txt
#
#====================================================================

# Variables

## Service names

### Apache HTTPd
APACHE2_SERVICE=apache2
[ -e /etc/redhat-release ] && APACHE2_SERVICE=httpd

### PostgreSQL
if type systemctl >/dev/null 2>&1; then
  POSTGRESQL_SERVICE=$(systemctl list-unit-files --type service | awk -F'.' '{print $1}' | grep -E "^postgresql[0-9]*$" | tail -n 1)
elif type chkconfig >/dev/null 2>&1; then
  POSTGRESQL_SERVICE=$(chkconfig 2>/dev/null | awk '{ print $1 }' | grep "postgresql" | tail -n 1)
else
  POSTGRESQL_SERVICE=$(ls -1 /etc/init.d | grep "postgresql" | tail -n 1)
fi

### Rudder services
SLAPD_SERVICE=rudder-slapd
JETTY_SERVICE=rudder-jetty
RUDDER_AGENT_SERVICE=rudder-agent

## PID files
POSTGRESQL_PID_FILE=`find /var/lib -iname postmaster.pid`

# Functions
start_services()
{
    service ${SLAPD_SERVICE} start
    service ${POSTGRESQL_SERVICE} start
    service ${JETTY_SERVICE} start
    service ${APACHE2_SERVICE} start
    service ${RUDDER_AGENT_SERVICE} start
}

stop_services()
{
    service ${RUDDER_AGENT_SERVICE} stop
    service ${APACHE2_SERVICE} stop
    service ${JETTY_SERVICE} stop
    service ${POSTGRESQL_SERVICE} stop
    service ${SLAPD_SERVICE} stop
}

status_services()
{
    service ${SLAPD_SERVICE} status
    # Add PostgreSQL PID to the output
    echo -n "postgres[`head -1 ${POSTGRESQL_PID_FILE}`]: "
    service ${POSTGRESQL_SERVICE} status
    service ${JETTY_SERVICE} check | tail -1
    service ${APACHE2_SERVICE} status
    service ${RUDDER_AGENT_SERVICE} status
}

case "$1" in
    start)
        start_services
    ;;
    stop)
        stop_services
    ;;
    restart)
        stop_services
        start_services
    ;;
    status)
        status_services
    ;;
    *)
        echo "Usage: $0 {start|stop|restart|status}"
        exit 1
    ;;
esac

exit 0
