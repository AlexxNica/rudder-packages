#!/usr/bin/make -f
# -*- makefile -*-
# Sample debian/rules that uses debhelper.
# This file was originally written by Joey Hess and Craig Small.
# As a special exception, when this file is copied by dh-make into a
# dh-make output file, you may use that output file without restriction.
# This special exception was added by Craig Small in version 0.37 of dh-make.

# Uncomment this to turn on verbose mode.
#export DH_VERBOSE=1

export MAVEN_OPTS := -Xmx512m
MAVEN_SETTINGS := settings-external.xml

configure: configure-stamp
configure-stamp:
	dh_testdir
	# Add here commands to configure the package.

build: build-stamp

build-stamp: configure-stamp java8
	dh_testdir

	ls -lh $(CURDIR)/SOURCES/rudder-sources
	cd $(CURDIR)/SOURCES/rudder-sources/rudder-parent-pom && $(CURDIR)/SOURCES/maven/bin/mvn --batch-mode -s $(CURDIR)/SOURCES/$(MAVEN_SETTINGS) -Dmaven.test.skip=true install
	cd $(CURDIR)/SOURCES/rudder-sources/rudder-commons && $(CURDIR)/SOURCES/maven/bin/mvn --batch-mode -s $(CURDIR)/SOURCES/$(MAVEN_SETTINGS) -Dmaven.test.skip=true install
	cd $(CURDIR)/SOURCES/rudder-sources/scala-ldap && $(CURDIR)/SOURCES/maven/bin/mvn --batch-mode -s $(CURDIR)/SOURCES/$(MAVEN_SETTINGS) -Dmaven.test.skip=true install
	cd $(CURDIR)/SOURCES/rudder-sources/ldap-inventory && $(CURDIR)/SOURCES/maven/bin/mvn --batch-mode -s $(CURDIR)/SOURCES/$(MAVEN_SETTINGS) -Dmaven.test.skip=true install
	cd $(CURDIR)/SOURCES/rudder-sources/ldap-inventory/inventory-provisioning-web && $(CURDIR)/SOURCES/maven/bin/mvn --batch-mode -s $(CURDIR)/SOURCES/$(MAVEN_SETTINGS) -Dmaven.test.skip=true install package

	touch $@

# dirty hack, don't do this, if your builder comes with java preinstalled you can remove this
# TODO remove as soon as possible
java8:
	dpkg -l | egrep "openjdk-8-jdk|oracle-java8-installer" || ( echo "Installing JDK"; \
		dist=$$(grep '^deb' /etc/apt/sources.list | head -n1  | perl -pe 's/^deb .*? (\w+) .*/$$1/') \
		[ $$dist = "wheezy" ] && dist="precise"; \
		if [ $$dist = "xenial" ]; then \
			apt-get install openjdk-8-jdk; \
		elif [ $$dist = "jessie" ]; then \
			echo "deb http://ftp.fr.debian.org/debian/ jessie-backports main" > /etc/apt/sources.list.d/openjdk.list ; \
			apt-get update && apt-get install openjdk-8-jdk ; \
		else \
			echo "deb http://ppa.launchpad.net/webupd8team/java/ubuntu $$dist main" > /etc/apt/sources.list.d/jdk.list ; \
			echo "oracle-java8-installer	shared/present-oracle-license-v1-1	note	" | debconf-set-selections; \
			echo "oracle-java8-installer	shared/accepted-oracle-license-v1-1	boolean	true" | debconf-set-selections; \
			echo "oracle-java8-installer	shared/error-oracle-license-v1-1	error	" | debconf-set-selections; \
			echo "oracle-java8-installer	oracle-java8-installer/not_exist	error	" | debconf-set-selections; \
			echo "oracle-java8-installer	oracle-java8-installer/local	string	" | debconf-set-selections; \
			apt-get update && apt-get install oracle-java8-installer ; \
		fi \
	)


clean:
	dh_testdir
	dh_testroot
	rm -f build-stamp configure-stamp

	# Add here commands to clean up after the build process.

	dh_clean

install: build

	dh_testdir
	dh_testroot
	dh_prep
	dh_installdirs

	# Add here commands to install the package into debian/normation-openldap.

# Build architecture-independent files here.
binary-indep: install
# We have nothing to do by default.

# Build architecture-dependent files here.
binary-arch: install
	dh_testdir
	dh_testroot
	dh_installchangelogs
#	dh_installdocs
#	dh_installexamples
	cp $(CURDIR)/SOURCES/rudder-sources/ldap-inventory/inventory-provisioning-web/target/inventory-provisioning-web*.war $(CURDIR)/BUILD/endpoint.war
	dh_install --SOURCEDIR=$(CURDIR)/BUILD/ endpoint.war /opt/rudder/share/webapps/
	dh_install --SOURCEDIR=$(CURDIR)/SOURCES/ endpoint.xml /opt/rudder/share/webapps/
	dh_install --SOURCEDIR=$(CURDIR)/SOURCES/ inventory-web.properties /opt/rudder/etc/
	dh_install --SOURCEDIR=$(CURDIR)/SOURCES/ rudder-inventory-endpoint-upgrade /opt/rudder/bin/
	dh_install --SOURCEDIR=$(CURDIR)/SOURCES/ rudder-inventory-endpoint /opt/rudder/etc/server-roles.d/
#	dh_installmenu
#	dh_installdebconf
#	dh_installlogrotate
#	dh_installmime
#	dh_python
#	dh_installcron
#	dh_installinfo
	dh_installman
	dh_link
	dh_strip
	dh_compress
	dh_fixperms
#	dh_perl
#	dh_makeshlibs
	dh_installdeb
	dh_shlibdeps
	dh_gencontrol
	dh_md5sums
	dh_builddeb

binary: binary-indep binary-arch
.PHONY: build clean binary-indep binary-arch binary install configure
